workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "master"
    - if: "$CI_COMMIT_BRANCH =~ /^pilot/"

variables:
  IMAGE_NAME: "backend"
  KANIKO_VERBOSITY: info
  DOCKERFILE: Dockerfile
  IMAGE_VERSION_POSTFIX: ""
  # for the linked test postgres environment
  POSTGRES_DB: gitential
  POSTGRES_USER: gitential
  POSTGRES_PASSWORD: secret123

stages:
  - check
  - test
  - build
  - deploy

.poetry_common: &poetry_common
  before_script:
    - poetry install
  image:
    name: docker-internal.gitential.io/gitential2-testing:v4-20220131
    entrypoint: [""]

.kaniko:
  image:
    name: gcr.io/kaniko-project/executor:debug-v0.23.0
    entrypoint: [""]
  resource_group: nexus
  retry: 1
  before_script:
    - echo $DOCKER_AUTH_CONFIG > /kaniko/.docker/config.json
    - export CI_VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}
    - export IMAGE_VERSION=$CI_VERSION
    - >
      if [ "$CI_COMMIT_TAG" != "" ]; then
        export SKIP_PUSH=""
        export DESTINATION_REGISTRY=$DESTINATION_REGISTRY_STABLE
      elif [ "$CI_COMMIT_BRANCH" == "master" ]; then
        export SKIP_PUSH=""
        export DESTINATION_REGISTRY=$DESTINATION_REGISTRY_INTERNAL
      elif [[ "$CI_COMMIT_BRANCH" =~ ^pilot.* ]]; then
        export SKIP_PUSH=""
        export DESTINATION_REGISTRY=$DESTINATION_REGISTRY_INTERNAL
      else
        export SKIP_PUSH="--no-push"
        export DESTINATION_REGISTRY=$DESTINATION_REGISTRY_INTERNAL
      fi
  script:
    - echo "Building $DESTINATION_REGISTRY/$IMAGE_NAME:${IMAGE_VERSION}${IMAGE_VERSION_POSTFIX} ..."
    - |
      /kaniko/executor \
      --verbosity=$KANIKO_VERBOSITY \
      --context $CI_PROJECT_DIR \
      --dockerfile $CI_PROJECT_DIR/$DOCKERFILE \
      --destination $DESTINATION_REGISTRY/$IMAGE_NAME:${IMAGE_VERSION}${IMAGE_VERSION_POSTFIX} \
      --build-arg NEXUS_USERNAME=$NEXUS_USERNAME \
      --build-arg NEXUS_PASSWORD=$NEXUS_PASSWORD \
      --build-arg NEXUS_HOSTNAME=$NEXUS_HOSTNAME \
      --build-arg PYTHON_VERSION=$PYTHON_VERSION \
      --build-arg IMAGE_VERSION=$IMAGE_VERSION \
      $SKIP_PUSH

code_linters:
  extends: .poetry_common
  stage: check
  script:
    - poetry run black --check gitential2 tests
    - poetry run pylint gitential2

static_type_check:
  extends: .poetry_common
  stage: check
  script:
    - poetry run mypy gitential2

dependency_check:
  extends: .poetry_common
  stage: check
  script:
    - poetry run invoke dependency-check

unit_tests:
  extends: .poetry_common
  stage: test
  script:
    - poetry run invoke unit-test

integration_tests:
  extends: .poetry_common
  stage: test
  services:
    - name: postgres:13.1
    - name: redis:6.0.10

  script:
    - poetry run invoke integration-test

build_and_publish_image:
  extends: .kaniko
  stage: build

deploy_to_testing_environment:
  stage: deploy
  image:
    name: nexus-docker.ops.gitential.com/helm-helper:e38017f9
    entrypoint: [""]
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$GIT_SSH_PRIV_KEY")
    - git config --global user.email "apps@gitential.com"
    - git config --global user.name "CI Robot"
    - mkdir -p ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  script:
    - git clone git@gitlab.com:gitential-com/environments.git
    - cd environments
    - inv update-testing-versions
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
